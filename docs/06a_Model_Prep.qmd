---
title: "07 Air Power Campaign Results"
author: "J Andres Gannon"
date: "March 4, 2018"
output:
  html_document:
    toc: yes
  html_notebook:
    toc: yes
    toc_float: yes
editor_options:
  chunk_output_type: inline
---
<style>
    body .main-container {
        max-width: 100%;
    }
</style>

# Set up
```{r}
library(magrittr)
library(tidyverse)
```

# Intervention list
Start by loading the cleaned intervention list
```{r}
df <- read.csv(paste0(here::here(), "/data/","03a_intervention_newdata_dbpedia.csv")) %>%
  dplyr::select(wikidata_name, wikidata_id,
                location_name, lat, lon,
                start_date, end_date, duration,
                belligerent_sideA, belligerent_sideB,
                dplyr::starts_with("means_"),
                dplyr::starts_with("casualties_"))
```

## Clean
Subset to just the US, and drop dyads that don't involve the US
```{r}
ally <- df %>%
  dplyr::group_by(wikidata_name, wikidata_id) %>%
  dplyr::summarise(participants = dplyr::n_distinct(belligerent_sideA)) %>%
  dplyr::mutate(participants = participants-1)

ally %>%
  DT::datatable()

df <- dplyr::left_join(df, ally) %>%
  dplyr::mutate(belligerent_sideA = "United States") %>%
  dplyr::mutate(ccode1 = as.numeric(2),
                cname1 = "USA",
                qcode1 = "Q30",
                multilateral1 = dplyr::if_else(participants > 0, 1, 0)) %>%
  dplyr::rename(belligerent1 = belligerent_sideA,
                belligerent2 = belligerent_sideB,
                allycount1 = participants) %>%
  dplyr::distinct()
```

## Quick checks
Intervention that span more than a year. Make a temporary variable for start year
```{r}
df %>%
  dplyr::select(wikidata_name, start_date, end_date) %>%
  dplyr::mutate(year_start = format(as.Date(start_date, format="%Y-%m-%d"),"%Y"),
                year_end = format(as.Date(end_date, format="%Y-%m-%d"),"%Y")) %>%
  dplyr::filter(year_end > year_start) %>%
  dplyr::select(!dplyr::starts_with("year_")) %>%
  dplyr::distinct() %>%
  DT::datatable(filter = "top")

df <- df %>%
  dplyr::mutate(year = as.numeric(format(as.Date(start_date, format="%Y-%m-%d"),"%Y")))
```

# Prep variables

## Actors
Get ccode for state actors
```{r}
qcodes <- googlesheets4::read_sheet(ss = "https://docs.google.com/spreadsheets/d/1wiiuNVE2Wt-ZWyZRWDoqyxvg-y-hWpNdDWwdZjYCvM4/edit#gid=1180615821",
                                    sheet = "belligerent_list") %>%
  dplyr::filter(is.na(ccode_wrong)) %>%
  dplyr::select(belligerent, ccode, cname, Qcode) %>%
  dplyr::rename(belligerent2 = belligerent,
                ccode2 = ccode,
                cname2 = cname,
                qcode2 = Qcode)

df <- dplyr::left_join(df, qcodes) %>%
  dplyr::mutate(sideB_nonstate = dplyr::if_else(is.na(ccode2), 1, 0))

df %>%
  dplyr::select(belligerent2, ccode2, cname2) %>%
  dplyr::distinct() %>%
  dplyr::arrange(ccode2) %>%
  DT::datatable(filter = "top")

# New list of sideB non-state actor info
sideb_nonstate <- read.csv(paste0(here::here(), "/data/","nonstate_actors.csv")) %>%
  dplyr::rename(sideB_nonstate_major = X) %>%
  dplyr::select(belligerent2, qcode2, sideB_nonstate_major)

df <- dplyr::left_join(df, sideb_nonstate)

# Make all state actors 0 for nonstate major
df <- df %>%
  dplyr::mutate(sideB_nonstate_major = ifelse(is.na(sideB_nonstate_major), 0, sideB_nonstate_major))

df %>%
  dplyr::select(belligerent2, cname2, sideB_nonstate, sideB_nonstate_major) %>%
  DT::datatable()
```

## Parent interventions
### Create single parent level
```{r}
parents <- googlesheets4::read_sheet("https://docs.google.com/spreadsheets/d/1wiiuNVE2Wt-ZWyZRWDoqyxvg-y-hWpNdDWwdZjYCvM4/edit?usp=sharing",
                                    sheet = "04a_interventions_newdata_childof")

# Make sure the dropped observations are not in here, since it produces phantom observations
parents <- parents %>%
  dplyr::filter(realparent == 1 |
                  is.na(realparent)) %>%
  dplyr::distinct() %>%
  dplyr::select(-coder, -realparent, -notes) %>%
  dplyr::mutate(wikidata_id = tidyr::replace_na(wikidata_id, "NA")) %>%
  tidyr::unite(child, c('wikidata_name', 'wikidata_id'), sep = "_", remove = TRUE) %>%
  tidyr::unite(parent, c('childof_name', 'childof_id'), sep = "_", remove = TRUE) %>%
  dplyr::mutate(parent = dplyr::recode(parent, "NA_NA" = "intervention")) %>%
  dplyr::select(parent, child)

tree <- data.tree::FromDataFrameNetwork(parents)
levels <- data.tree::ToDataFrameTypeCol(tree)

# write.csv(levels, paste0(here::here(), "/data/","tree.csv"))

# Choose master list of parents for each intervention. Maybe this is done by level
levels <- levels %>%
  dplyr::mutate(parent = ifelse(level_2 %in% c("Gulf War_Q37643",
                                               "Libyan Crisis_Q18702324",
                                               "Yemeni Crisis_Q15946570"),
                                level_2, NA),
                parent = ifelse(is.na(level_3) | is.na(level_4),
                                level_2, parent),
                parent = ifelse(level_3 %in% c("Syrian Civil War_Q178810",
                                               "Somali Civil War_Q243620",
                                               "War in Afghanistan_Q182865",
                                               "War in North-West Pakistan_Q179275",
                                               "Bosnian War_Q181533",
                                               "Kosovo War_Q190029"),
                                level_3, parent),
                parent = ifelse(level_4 %in% c("Operation Enduring Freedom – Horn of Africa_Q1195810",
                                               "Operation Enduring Freedom – Philippines_Q2631285",
                                               "Operation Enduring Freedom – Trans Sahara_Q2602154",
                                               "2019–2021 Persian Gulf crisis_Q65920364"),
                                level_4, parent),
                parent = ifelse(level_5 %in% c("American-led intervention in Iraq (2014–present)_Q18159629",
                                               "Iraq conflict (2003–present)_Q47015896"),
                                level_5, parent))

levels <- levels %>%
  dplyr::mutate(child = dplyr::coalesce(level_9, level_8, level_7, level_6, level_5, level_4, level_3, level_2))

levels <- levels %>%
  dplyr::relocate(child, parent)

sort(unique(levels$parent))

# Merge with leaf nodes
childonly <- read.csv(paste0(here::here(), "/data/","04a_intervention_newdata_childonly.csv")) %>%
  dplyr::mutate(child = 1) %>%
  dplyr::select(wikidata_name, child)

# Merge and subset
df <- dplyr::left_join(df, childonly) %>%
  dplyr::filter(child == 1)

# re-split variables in level and get just the relevent ones
levels <- levels %>%
  dplyr::select(child, parent) %>%
  tidyr::separate(child,
                  into = c("wikidata_name", "wikidata_id"),
                  sep = "_") %>%
  tidyr::separate(parent,
                  into = c("parent_name",
                           "parent_id"),
                  sep = "_")
```

### Match parents
## Prior data QCode match
partof_existing for each existing dataset (COW, IMI, etc)
```{r}
# See how many existing datasets cover each parent
prior <- readRDS(paste0(here::here(), "/data/","QCode_wide.rds")) %>%
  tibble::column_to_rownames("QCode") %>%
  dplyr::mutate(dataset_count = rowSums(.)) %>%
  tibble::rownames_to_column("QCode")

prior <- dplyr::left_join(levels, prior,
                          by = c("parent_id" = "QCode")) %>%
  dplyr::relocate(wikidata_name, wikidata_id, parent_name, parent_id, dataset_count)
```

Match parents to the main data, including the start date of the parent intervention and days into the parent intervention
```{r}
# Pull all interventions so we have the start dates
df_parent <- googlesheets4::read_sheet(ss = "https://docs.google.com/spreadsheets/d/1wiiuNVE2Wt-ZWyZRWDoqyxvg-y-hWpNdDWwdZjYCvM4/edit#gid=1180615821",
                                    sheet = "03a_interventions_newdata_dbpedia") %>%
  dplyr::select(wikidata_id, start_date) %>%
  dplyr::rename(parent_id = "wikidata_id",
                parent_start = "start_date")

prior <- dplyr::left_join(prior, df_parent)

prior <- prior %>%
  dplyr::select(wikidata_id, parent_name, parent_id, parent_start)

df <- dplyr::left_join(df, prior)

# Calculate how many days into the parent intervention the child intervention occurred
df <- df %>%
  dplyr::mutate(start_date = as.Date(start_date, "%Y-%m-%d"),
                parent_start = as.Date(parent_start, "%Y-%m-%d"),
                daysinto_parent = difftime(start_date, parent_start, units = c("days")),
                daysinto_parent = as.numeric(daysinto_parent, units = "days"))

df %>%
  dplyr::select(wikidata_name, start_date, parent_name, parent_start, daysinto_parent) %>%
  dplyr::distinct() %>%
  DT::datatable()

saveRDS(df, paste0(here::here(), "/data/","interv_dyad.rds"))
```

# LHS Unrisk
## Create
Make unrisk variable
```{r}
df <- df %>%
    dplyr::mutate(unrisk_trunc = ((means_groundtroops * 1 + 
                                   means_closeairsupport * 2 +
                                   means_paramilitary * 3 +
                                   means_airtoair * 4 +
                                   means_aerialbombing * 5 +
                                   means_cruisemissiles * 6 +
                                   means_drones * 7)/
                                  (means_groundtroops +
                                     means_closeairsupport +
                                     means_paramilitary +
                                     means_airtoair +
                                     means_aerialbombing +
                                     means_cruisemissiles +
                                     means_drones
                                   )
                                )
                )
```

## Condense UoA
Collapse the data from intervention-dyad to intervention

```{r}
df_interv <- df %>%
  dplyr::select(wikidata_name, wikidata_id, parent_name, parent_id,
                unrisk_trunc, dplyr::starts_with("means_"),
                lat, lon, 
                start_date, end_date, duration, daysinto_parent,
                allycount1, multilateral1) %>%
  dplyr::distinct()

df_target <- df %>%
  dplyr::select(wikidata_id,
                cname2, sideB_nonstate, sideB_nonstate_major) %>%
  dplyr::group_by(wikidata_id) %>%
  dplyr::summarise(sideB_state_count = dplyr::n_distinct(cname2, na.rm = TRUE),
                   sideB_nonstate_all_count = sum(sideB_nonstate, na.rm = TRUE),
                   sideB_nonstate_major_count = sum(sideB_nonstate_major == 2, na.rm = TRUE),
                   sideB_nonstate_minor_count = sum(sideB_nonstate_major == 1, na.rm = TRUE)) %>%
  dplyr::mutate(sideB_state_ratio = sideB_state_count/(sideB_state_count + sideB_nonstate_all_count)) %>%
  dplyr::mutate(sideB_statenonstate_ordinal = dplyr::if_else(sideB_state_ratio == 1, 
                                                              0, 0),
                sideB_statenonstate_ordinal = dplyr::if_else(sideB_state_ratio < 1 & sideB_state_ratio > 0, 
                                                              1, sideB_statenonstate_ordinal),
                sideB_statenonstate_ordinal = dplyr::if_else(sideB_state_ratio == 1,
                                                              2, sideB_statenonstate_ordinal)) %>%
  dplyr::mutate(sideB_state_binary = dplyr::if_else(sideB_state_count > 0,
                                                    1, 0),
                sideB_nonstate_all_binary = dplyr::if_else(sideB_nonstate_all_count > 0,
                                                       1, 0),
                sideB_nonstate_major_binary = dplyr::if_else(sideB_nonstate_major_count > 0,
                                                       1, 0),
                sideB_nonstate_minor_binary = dplyr::if_else(sideB_nonstate_minor_count > 0,
                                                       1, 0))

hist(df_target$sideB_statenonstate_ordinal)

df_interv <- dplyr::left_join(df_interv, df_target)
```

## Summary stats
```{r}
df_interv %>%
  ggplot(aes(x = unrisk_trunc)) +
  geom_histogram(binwidth = 0.25) +
  labs(title = "High-technology Score, US Military Interventions (1991-2020)",
       x = "High-tech score",
       y = "Number of interventions"
       ) +
  theme_minimal() +
  theme(text = element_text(size = 14))
```

# RHS
## Public approval
```{r}
approval <- read.csv(paste0(here::here(), "/data/","approval.csv"))

# Prep date variables
approval <- approval %>%
  dplyr::mutate(month = stringr::str_pad(month, 2, pad = "0")) %>%
  dplyr::mutate(start_date_month = paste0(year, "-", month),
                approveL1 = dplyr::lag(approve),
                disapproveL1 = dplyr::lag(disapprove))

df_interv <- df_interv %>%
  dplyr::mutate(start_date_month = substr(start_date, start = 1, stop = 7))

# Merge
df_interv <- dplyr::left_join(df_interv, approval)

# Add Biden events
df_interv <- df_interv %>%
  dplyr::mutate(presidentid = ifelse(is.na(presidentid), "Joseph Biden", presidentid))
```

## Casualties
```{r}
dates <- approval %>%
  dplyr::select(start_date_month)

casualties_oef <- readxl::read_xls(paste0(here::here(), "/inst/extdata/casualties/", "OEFMonthly.xls")) %>%
  dplyr::mutate(conflict = "oef") %>%
  dplyr::rename(date = "Month/Year") %>%
  dplyr::mutate("date" = stringr::str_squish(date)) %>%
  tidyr::separate(col = date, into = c("month", "year"), sep = " ") %>%
  dplyr::mutate(month = stringr::str_to_title(month)) %>%
  dplyr::mutate(month = match(month, month.name)) %>%
  dplyr::mutate(month = stringr::str_pad(month, 2, pad = "0"),
                start_date_month = paste0(year, "-", month)) %>%
  dplyr::select(start_date_month, conflict, TOTL_hostile, TOTL_all)

casualties_ofs <- readxl::read_xls(paste0(here::here(), "/inst/extdata/casualties/", "OFSMonthly.xls")) %>%
  dplyr::mutate(conflict = "ofs") %>%
  dplyr::rename(date = "Month/Year") %>%
  dplyr::mutate("date" = stringr::str_squish(date)) %>%
  tidyr::separate(col = date, into = c("month", "year"), sep = " ") %>%
  dplyr::mutate(month = stringr::str_to_title(month)) %>%
  dplyr::mutate(month = match(month, month.name)) %>%
  dplyr::mutate(month = stringr::str_pad(month, 2, pad = "0"),
                start_date_month = paste0(year, "-", month)) %>%
  dplyr::select(start_date_month, conflict, TOTL_hostile, TOTL_all)

casualties_oif <- readxl::read_xls(paste0(here::here(), "/inst/extdata/casualties/", "OIFMonthly.xls")) %>%
  dplyr::mutate(conflict = "oif") %>%
  dplyr::rename(date = "Month/Year") %>%
  dplyr::mutate("date" = stringr::str_squish(date)) %>%
  tidyr::separate(col = date, into = c("month", "year"), sep = " ") %>%
  dplyr::mutate(month = stringr::str_to_title(month)) %>%
  dplyr::mutate(month = match(month, month.name)) %>%
  dplyr::mutate(month = stringr::str_pad(month, 2, pad = "0"),
                start_date_month = paste0(year, "-", month)) %>%
  dplyr::select(start_date_month, conflict, TOTL_hostile, TOTL_all)

casualties_oir <- readxl::read_xls(paste0(here::here(), "/inst/extdata/casualties/", "OIRMonthly.xls")) %>%
  dplyr::mutate(conflict = "oir") %>%
  dplyr::rename(date = "Month/Year") %>%
  dplyr::mutate("date" = stringr::str_squish(date)) %>%
  tidyr::separate(col = date, into = c("month", "year"), sep = " ") %>%
  dplyr::mutate(month = stringr::str_to_title(month)) %>%
  dplyr::mutate(month = match(month, month.name)) %>%
  dplyr::mutate(month = stringr::str_pad(month, 2, pad = "0"),
                start_date_month = paste0(year, "-", month)) %>%
  dplyr::select(start_date_month, conflict, TOTL_hostile, TOTL_all)

casualties_ond <- readxl::read_xls(paste0(here::here(), "/inst/extdata/casualties/","ONDMonthly.xls")) %>%
  dplyr::mutate(conflict = "ond") %>%
  dplyr::rename(date = "Month/Year") %>%
  dplyr::mutate("date" = stringr::str_squish(date)) %>%
  tidyr::separate(col = date, into = c("month", "year"), sep = " ") %>%
  dplyr::mutate(month = stringr::str_to_title(month)) %>%
  dplyr::mutate(month = match(month, month.name)) %>%
  dplyr::mutate(month = stringr::str_pad(month, 2, pad = "0"),
                start_date_month = paste0(year, "-", month)) %>%
  dplyr::select(start_date_month, conflict, TOTL_hostile, TOTL_all)

casualties_aad <- read.csv(paste0(here::here(), "/inst/extdata/casualties/","aad-search-results.csv")) %>%
  dplyr::select(INCIDENT.OR.DEATH.DATE,
                HOSTILE.OR.NON.HOSTILE.DEATH.INDICATOR) %>%
  tidyr::separate(col = INCIDENT.OR.DEATH.DATE, into = c("month", "day", "year"), sep = "/") %>%
  dplyr::mutate(start_date_month = paste0(year, "-", month)) %>%
  dplyr::group_by(start_date_month, HOSTILE.OR.NON.HOSTILE.DEATH.INDICATOR) %>%
  dplyr::summarise(count = n()) %>%
  dplyr::ungroup() %>%
  tidyr::pivot_wider(id_cols = start_date_month,
                     names_from = HOSTILE.OR.NON.HOSTILE.DEATH.INDICATOR,
                     values_from = count) %>%
  dplyr::rename(TOTL_hostile = 'Hostile Death', TOTL_nonhostile = 'Non-Hostile Death') %>%
  dplyr::mutate(TOTL_hostile = dplyr::coalesce(TOTL_hostile, 0),
                TOTL_nonhostile = dplyr::coalesce(TOTL_nonhostile, 0)) %>%
  dplyr::mutate(TOTL_all = as.numeric(TOTL_hostile) + as.numeric(TOTL_nonhostile)) %>%
  dplyr::select(-TOTL_nonhostile) %>%
  dplyr::mutate(conflict = "aad")

casualties_all <- rbind(casualties_aad,
                        casualties_oef,
                        casualties_ofs,
                        casualties_oif,
                        casualties_oir,
                        casualties_ond)

casualties_all <- casualties_all %>%
  dplyr::group_by(start_date_month) %>%
  dplyr::summarise(TOTL_hostile_all = sum(TOTL_hostile),
                   TOTL_all_all = sum(TOTL_all))

casualties_all <- dplyr::left_join(dates, casualties_all) %>%
  dplyr::mutate(TOTL_hostile = dplyr::coalesce(TOTL_hostile_all, 0),
                TOTL_all = dplyr::coalesce(TOTL_all_all, 0)) %>%
  dplyr::select(start_date_month,
                TOTL_hostile, TOTL_all) %>%
  dplyr::mutate(TOTL_hostileL1 = lag(TOTL_hostile),
                TOTL_allL1 = lag(TOTL_all),
                TOTL_hostileL2 = lag(TOTL_hostileL1),
                TOTL_allL2 = lag(TOTL_allL1),
                TOTL_hostile_chg = TOTL_hostileL2 - TOTL_hostileL1,
                TOTL_all_chg = TOTL_allL2 - TOTL_allL1)

# Merge
df_interv <- dplyr::left_join(df_interv, casualties_all)
```

## Collateral damage
Urban areas mean low tech
```{r}
gis <- read.csv(paste0(here::here(), "/data/","coordinates.csv")) %>%
  dplyr::select(wikidata_id, urban, forested, mountainous) %>%
  dplyr::mutate(urban_binary = dplyr::if_else(urban == 2, 1, 0))

df_interv <- dplyr::left_join(df_interv, gis)
```

# Final clean
Fix variable types
```{r}
str(df_interv)

df_interv %<>%
  dplyr::mutate_at(c("wikidata_id",
                     "parent_id",
                     "multilateral1",
                     "sideB_statenonstate_ordinal",
                     "sideB_state_binary",
                     "sideB_nonstate_all_binary",
                     "sideB_nonstate_major_binary",
                     "sideB_nonstate_minor_binary",
                     "demparty",
                     "urban",
                     "urban_binary",
                     "forested",
                     "mountainous"), factor)
```

# Archive
## Dyad-year variables
```{r, eval = FALSE}
# These are dyad-year covariates that don't work since the unit of analysis is the intervention, not the dyad
library(peacesciencer)

# Create dyads with a bunch of useful covariates
dyads <- create_dyadyears(system = "cow",
                          directed = TRUE) %>%
  dplyr::filter(year >= 1990 &
                  year <= 2020) %>%

  add_cow_majors() %>%
  add_nmc() %>%
  add_sdp_gdp(system = "cow") %>%
  add_cow_trade() %>%

  add_cow_mids() %>%

  add_capital_distance() %>%
  add_minimum_distance(system = "cow") %>%
  add_contiguity() %>%

  add_democracy() %>%
  add_archigos()

# Mutate to create new vars
dyads <- dyads %>%
  dplyr::mutate(milex1 = dplyr::na_if(milex1, -9),
                milex2 = dplyr::na_if(milex2, -9)) %>%
  dplyr::mutate(landcontig = dplyr::if_else(conttype == 1, 
                                            1, 0),
                cincprop = dplyr::if_else(cinc1 > cinc2, 
                                          cinc2/cinc1, cinc1/cinc2),
                jointdemo = dplyr::if_else(polity21 >= -3 &
                                             polity22 >= -3, 
                                           1, 0),
                minwbgdp = dplyr::if_else(wbgdp2011est1 > wbgdp2011est2,
                                          wbgdp2011est2, wbgdp2011est1),
                major_minor = dplyr::if_else(cowmaj1 + cowmaj2 == 1,
                                             1, 0),
                major_major = dplyr::if_else(cowmaj1 + cowmaj2 == 2,
                                             1, 0),
                gdpprop = dplyr::if_else(wbgdp2011est1 > wbgdp2011est2,
                                         wbgdp2011est2/wbgdp2011est1, wbgdp2011est1/wbgdp2011est2),
                milexprop = dplyr::if_else(milex1 > milex2,
                                           milex2/(milex1 + 1), milex1/(milex2 + 1)))

# Merge with original data
df <- dplyr::left_join(df, dyads)
```

# Save
```{r}
saveRDS(df_interv, paste0(here::here(), "/data/","06a_model.rds"))
```